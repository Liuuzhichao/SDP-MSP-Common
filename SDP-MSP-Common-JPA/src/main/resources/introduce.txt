
1. 什么是 JPA?
    JPA(Java Persistence API)Java持久化API。是一套Sun公司Java官方制定的ORM方案, 是规范, 是标准, sun公司自己并没有实现
    是JDK 5.0注解或XML描述对象－关系表的映射关系, 并将运行期的实体对象持久化到数据库中。

2. JPA 有什么优势:
    2.1标准化
        JPA 是 JCP 组织发布的 Java EE 标准之一，因此任何声称符合 JPA 标准的框架都遵循同样的架构，提供相同的访问API，这保证了基于JPA开发的企业应用能够经过少量的修改就能够在不同的JPA框架下运行。
    2.2容器级特性的支持
        JPA框架中支持大数据集、事务、并发等容器级事务，这使得 JPA 超越了简单持久化框架的局限，在企业应用发挥更大的作用。
    2.3简单方便
        JPA的主要目标之一就是提供更加简单的编程模型：在JPA框架下创建实体和创建Java 类一样简单，没有任何的约束和限制，只需要使用 javax.persistence.Entity进行注释，JPA的框架和接口也都非常简单，没有太多特别的规则和设计模式的要求，开发者可以很容易的掌握。JPA基于非侵入式原则设计，因此可以很容易的和其它框架或者容器集成。
    2.4查询能力
        JPA的查询语言是面向对象而非面向数据库的，它以面向对象的自然语法构造查询语句，可以看成是Hibernate HQL的等价物。JPA定义了独特的JPQL（Java Persistence Query Language），JPQL是EJB QL的一种扩展，它是针对实体的一种查询语言，操作对象是实体，而不是关系数据库的表，而且能够支持批量更新和修改、JOIN、GROUP BY、HAVING 等通常只有 SQL 才能够提供的高级查询特性，甚至还能够支持子查询。
    2.4高级特性
        JPA 中能够支持面向对象的高级特性，如类之间的继承、多态和类之间的复杂关系，这样的支持能够让开发者最大限度的使用面向对象的模型设计企业应用，而不需要自行处理这些特性在关系数据库的持久化。

3. ORM 是什么?
    ORM（Object Relational Mapping）对象关系映射。

4. ORM 有什么作用?
    在操作数据库之前, 先把数据表与实体类关联起来。然后通过实体类的对象操作（增删改查）数据库表, 这个就是ORM的行为
    所以, ORM是一个实现使用对象操作数据库的设计思想
    通过这句话, 我们知道JPA的作用就是通过对象操作数据库的, 不用编写sql语句。

5. JPA 的实现者有哪些?
    既然我们说JPA是一套标准, 意味着, 它只是一套实现 ORM 理论的接口, 没有实现的代码。 
    那么我们必须要有具体的实现者才可以完成ORM操作功能的实现, 市场上的主流的JPA框架（实现者）有： 
        Hibernate(JBoos)、EclipseTop(Eclipse社区)、OpenJPA(Apache基金会)
    其中 Hibernate 是众多实现者之中性能最好的。
    所以, Hibernate 和 JPA 的关系便一目了然. Hibernate 是 JPA 的一个具体实现.

5. 什么是 Spring Data JPA?
    Spring Data JPA 是 Spring 提供的一套简化 JPA 开发的框架, 按照约定好的【方法命名规则】写 dao 层接口, 就可以在不写接口实现的情况下, 实现对数据库的访问和操作。
    同时提供了很多除了 CRUD之外 的功能, 如分页、排序、复杂查询等等。
    Spring Data JPA 可以理解为 JPA 规范的再次封装抽象, 底层还是使用了 Hibernate 的 JPA 技术实现。
    因为 Spring Data JPA 是对于 JPA 的再次规范, 所以 Spring Data JPA 处于 JPA 和 Hibernate 之间, 关系为:
        JPA --> Spring Data JPA --> Hibernate(以及其他实现者)

6. JPA 和 MybatisPlus 的区别
    MybatisPlus 是由下向上(即由数据库表到业务)的编程方式
    JPA 是由上向下(从业务开始到数据库), 而且 JPA 可以避免手动创建表, 在程序启动时可以自动创建表, 更加关注业务.